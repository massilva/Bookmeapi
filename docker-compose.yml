version: '3.2'

services:
  db:
    restart: always
    image: postgres
    container_name: bookme_db
    volumes:
      - type: volume
        source: dbdata
        target: /pg_data
    ports:
      - "8001:5432"
  es:
    labels:
      com.example.service: "es"
      com.example.description: "For searching and indexing data"
    image: docker.elastic.co/elasticsearch/elasticsearch:7.0.0 #elasticsearch:5.4
    container_name: bookme_es
    environment:
      - "ELASTIC_PASSWORD=changeme"
      - "http.host=0.0.0.0"
      - "transport.host=127.0.0.1"
    volumes:
      - type: volume
        source: esdata1
        target: /usr/share/elasticsearch/data/
    ports:
      - "9200:9200"
  kibana:
    labels:
      com.example.service: "kibana"
      com.example.description: "Data visualisation and for log aggregation"
    image: docker.elastic.co/kibana/kibana:7.0.0 #kibana:5.4.3
    container_name: bookme_kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_URL=http://es:9200
    depends_on:
      - es
    volumes:
      - "./kibana.yml:/usr/share/kibana/config/kibana.yml"

  logstash:
    labels:
      com.example.service: "logstash"
      com.example.description: "For logging data"
    image: logstash:5.4.3
    volumes:
      - ./:/logstash_dir
    command: logstash -f /logstash_dir/logstash.conf
    depends_on:
    - es
    ports:
      - "5959:5959"
  django_web:
    container_name: django_web
    labels:
      com.example.service: "web"
      com.example.description: "Use for the main web process"
    build:
      context: ./bookme/docker_compose/django/
      dockerfile: Dockerfile
    image: bookme_django_web:1.0
    depends_on:
      - db
      - es
      - kibana
    command: ["./docker_compose/django/wait_for_postgres.sh"]
    ports:
      - "8000:8000"
    environment:
      - LOGSTASH_HOST=logstash
    expose:
      - "5959"
    logging:
      driver: "json-file"
    volumes:
      - ./bookme:/app

volumes:
  dbdata:
  esdata1:
